AWSTemplateFormatVersion: "2010-09-09"
Transform: AWS::Serverless-2016-10-31
Description: >
  boilerplate-service

  Sample SAM Template for boilerplate-service

Parameters:
  EnvName:
    Description: Environment type.
    Type: String
    AllowedValues:
      - Staging
      - Prod
    ConstraintDescription: must specify Staging or Prod
  Service:
    Description: Service name.
    Type: String

Globals:
  Function:
    Timeout: 3

Resources:
  MyFunction:
    Type: AWS::Serverless::Function
    Properties:
      CodeUri: hello-world/
      Handler: app.lambdaHandler
      Runtime: nodejs16.x
      Architectures:
        - x86_64
      Tracing: Active
      Environment:
        Variables:
          POWERTOOLS_SERVICE_NAME: !Ref Service
          POWERTOOLS_METRICS_NAMESPACE: boilerplate-namespace
          LOG_LEVEL: INFO
      Events:
        HelloWorld:
          Type: Api
          Properties:
            RestApiId: !Ref StagingApi
            Path: /
            Method: GET
    Metadata: # Manage esbuild properties
      BuildMethod: esbuild
      BuildProperties:
        Minify: true
        Target: "es2020"
        # Sourcemap: true # Enabling source maps will create the required NODE_OPTIONS environment variables on your lambda function during sam build
        EntryPoints:
          - app.ts

  MyFunctionLogGroup: #To ensure Logs are deleted after a while.
    Type: AWS::Logs::LogGroup
    Properties:
      LogGroupName: !Sub "/aws/lambda/${MyFunction}"
      RetentionInDays: 7

  StagingApi:
    Type: AWS::Serverless::Api
    Properties:
      StageName: prod
      DefinitionBody:
        swagger: "2.0"
        info:
          title: "Staging API"
          version: "1.0"
        paths:
          /:
            get:
              x-amazon-apigateway-integration:
                type: "aws_proxy"
                httpMethod: "POST"
                uri: !Sub "arn:aws:apigateway:${AWS::Region}:lambda:path/2015-03-31/functions/${MyFunction.Arn}/invocations"
        # Add more API configuration here
      EndpointConfiguration:
        Type: REGIONAL
      # Domain:
      #   DomainName: !Sub "${Service}.${HostedZone}"
      #   CertificateArn: !Ref certificate
      #   Route53:
      #     HostedZoneName: !Ref HostedZone
      Domain:
        DomainName: !Sub "${Service}.${EnvName}.enpalm.se"
        CertificateArn: !Sub "{{resolve:ssm:/${EnvName}/API/CertificateARN}}"
        Route53:
          HostedZoneName: !Sub "${EnvName}.enpalm.se."

Outputs:
  ServiceDomainName:
    Value: !Sub "${Service}.${EnvName}.enpalm.se"
