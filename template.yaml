AWSTemplateFormatVersion: "2010-09-09"
Transform: AWS::Serverless-2016-10-31
Description: >
  boilerplate-service

  Sample SAM Template for boilerplate-service

Parameters:
  environment:
    Description: Environment type.
    Type: String
    AllowedValues: [dev, staging, prod]
    ConstraintDescription: must specify dev, staging, or prod
  service:
    Description: Service name
    Type: String

Conditions:
  IsProd: !Equals [!Ref environment, prod]
  IsStaging: !Equals [!Ref environment, staging]
  IsDeV: !Equals [!Ref environment, dev]

Globals:
  Function:
    Timeout: 3

Resources:
  HelloWorldFunction:
    Type: AWS::Serverless::Function
    Properties:
      CodeUri: hello-world/
      Handler: app.lambdaHandler
      Runtime: nodejs16.x
      Architectures:
        - x86_64
      Tracing: Active
      Environment:
        Variables:
          POWERTOOLS_SERVICE_NAME: !Ref service
          POWERTOOLS_METRICS_NAMESPACE: boilerplate-namespace
          LOG_LEVEL: INFO
      Events:
        HelloWorld:
          Type: Api
          Properties:
            RestApiId: !Ref StagingApi
            Path: /
            Method: GET
    Metadata: # Manage esbuild properties
      BuildMethod: esbuild
      BuildProperties:
        Minify: true
        Target: "es2020"
        # Sourcemap: true # Enabling source maps will create the required NODE_OPTIONS environment variables on your lambda function during sam build
        EntryPoints:
          - app.ts

  MyFunctionLogGroup: #To ensure Logs are deleted after a while.
    Type: AWS::Logs::LogGroup
    Properties:
      LogGroupName: !Sub "/aws/lambda/${HelloWorldFunction}"
      RetentionInDays: 7

  # StagingDomainRecord:
  #   Type: AWS::Route53::RecordSet
  #   Condition: IsStaging
  #   Properties:
  #     HostedZoneName: staging.enpalm.se.
  #     Name: !Sub "${service}.staging.enpalm.se"
  #     Type: A
  #     AliasTarget:
  #       DNSName: !Sub https://${ServerlessRestApi}.execute-api.${AWS::Region}.amazonaws.com/Prod/hello/
  #       HostedZoneId: Z2FDTNDATAQYW2

  StagingApi:
    Type: AWS::Serverless::Api
    Properties:
      StageName: prod
      DefinitionBody:
        swagger: "2.0"
        info:
          title: "Staging API"
          version: "1.0"
        paths:
          /hello:
            get:
              x-amazon-apigateway-integration:
                type: "aws_proxy"
                uri: !Sub "arn:aws:apigateway:${AWS::Region}:lambda:path/2015-03-31/functions/${HelloWorldFunction.Arn}/invocations"
        # Add more API configuration here
      EndpointConfiguration: REGIONAL
      Domain:
        DomainName: service.staging.enpalm.se
        CertificateArn: arn:aws:acm:eu-west-1:882782905959:certificate/15e827bc-7b76-4026-a656-db6971dfa689
        Route53:
          HostedZoneName: staging.enpalm.se

Outputs:
  StagingApi:
    Description: "API Gateway endpoint URL for Prod stage for Hello World function"
    Value: !Sub "https://${StagingApi}.execute-api.${AWS::Region}.amazonaws.com/prod/"
